#!/usr/bin/env php
<?php
/**
 * usage:
 *     php _ops/lib/HandleCachesAndGit
 *
 * case engage-api-deploy, to build api docker image
 *     php _ops/lib/HandleCachesAndGit ENGAGE_API_DEPLOY
 */

// === param ===
$param1 = $argv[1] ?? null;
// === validate ===
//    validate env vars
$repository = $param1 === 'ENGAGE_API_DEPLOY' ? 'engage-api-deploy' : getenv('Repository');
$branch = $param1 === 'ENGAGE_API_DEPLOY' ? getenv('API_DEPLOY_BRANCH') : getenv('Branch');
$EngagePlusCachesRepositoryDir = sprintf("%s/%s", getenv('ENGAGEPLUS_CACHES_DIR'), $repository);
$GitHubPersonalAccessToken = getenv('GITHUB_PERSONAL_ACCESS_TOKEN');

if (!$repository || !$branch || !$EngagePlusCachesRepositoryDir || !$GitHubPersonalAccessToken) {
    echo "[ERROR] missing a Branch or Repository or ENGAGEPLUS_CACHES_REPOSITORY_DIR or GITHUB_PERSONAL_ACCESS_TOKEN\n";
    exit(); // END
}

// === handle case engage-api-deploy ===

// === handle ===
echo "===\n";
echo "=== HANDLE CACHES AND GIT ===\n";
echo "Repository=$repository    Branch=$branch   DIR='$EngagePlusCachesRepositoryDir' \n";
//
$gitRemoteURLWithToken = sprintf("https://%s@github.com/infohkengage/%s.git", $GitHubPersonalAccessToken, $repository);
//     case checkout
if (is_dir(sprintf("%s/.git", $EngagePlusCachesRepositoryDir))) {
    echo "The directory '$EngagePlusCachesRepositoryDir' exist, SKIP to handle git repository\n";
    //
    // case clone
} else {
    echo "[ERROR] The directory '$EngagePlusCachesRepositoryDir' does not exist, clone new repository\n";
    $output = null;
    $resultCode = null;
    exec(join(';', [
        sprintf("rm -rf \"%s\"", $EngagePlusCachesRepositoryDir),
        sprintf("mkdir -p \"%s\"", $EngagePlusCachesRepositoryDir),
        sprintf("cd \"%s\"", $EngagePlusCachesRepositoryDir), # jump into this directory
        sprintf("git clone -b %s %s .", $branch, $gitRemoteURLWithToken),
    ]), $output, $resultCode);
    // print output
    foreach ($output as $line) {
        echo sprintf("    + %s\n", $line);
    }
}
// === update new code ===
$output = null;
$resultCode = null;
exec(join(';', [
    sprintf("cd \"%s\"", $EngagePlusCachesRepositoryDir), # jump into this directory
    sprintf("git remote set-url origin %s", $gitRemoteURLWithToken),
    'git reset --hard HEAD',
    sprintf("git checkout %s", $branch),
    'git pull',
]), $output, $resultCode);
// print output
foreach ($output as $line) {
    echo sprintf("    + %s\n", $line);
}
echo "===\n\n";
